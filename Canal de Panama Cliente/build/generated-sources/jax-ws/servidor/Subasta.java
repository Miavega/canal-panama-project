
package servidor;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Subasta", targetNamespace = "http://Servidor/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Subasta {


    /**
     * 
     * @param kSubasta
     * @return
     *     returns servidor.SubastaVO
     * @throws RHException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarSubastaEspecifica", targetNamespace = "http://Servidor/", className = "servidor.BuscarSubastaEspecifica")
    @ResponseWrapper(localName = "buscarSubastaEspecificaResponse", targetNamespace = "http://Servidor/", className = "servidor.BuscarSubastaEspecificaResponse")
    @Action(input = "http://Servidor/Subasta/buscarSubastaEspecificaRequest", output = "http://Servidor/Subasta/buscarSubastaEspecificaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Subasta/buscarSubastaEspecifica/Fault/RHException")
    })
    public SubastaVO buscarSubastaEspecifica(
        @WebParam(name = "k_subasta", targetNamespace = "")
        long kSubasta)
        throws RHException_Exception
    ;

    /**
     * 
     * @param kSubasta
     * @throws RHException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "cerrarSubasta", targetNamespace = "http://Servidor/", className = "servidor.CerrarSubasta")
    @ResponseWrapper(localName = "cerrarSubastaResponse", targetNamespace = "http://Servidor/", className = "servidor.CerrarSubastaResponse")
    @Action(input = "http://Servidor/Subasta/cerrarSubastaRequest", output = "http://Servidor/Subasta/cerrarSubastaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Subasta/cerrarSubasta/Fault/RHException")
    })
    public void cerrarSubasta(
        @WebParam(name = "k_subasta", targetNamespace = "")
        long kSubasta)
        throws RHException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws RHException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarSubastas", targetNamespace = "http://Servidor/", className = "servidor.ListarSubastas")
    @ResponseWrapper(localName = "listarSubastasResponse", targetNamespace = "http://Servidor/", className = "servidor.ListarSubastasResponse")
    @Action(input = "http://Servidor/Subasta/listarSubastasRequest", output = "http://Servidor/Subasta/listarSubastasResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Subasta/listarSubastas/Fault/RHException")
    })
    public List<Long> listarSubastas()
        throws RHException_Exception
    ;

    /**
     * 
     * @param kReserva
     * @return
     *     returns java.util.List<servidor.SubastaVO>
     * @throws RHException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarSubasta", targetNamespace = "http://Servidor/", className = "servidor.BuscarSubasta")
    @ResponseWrapper(localName = "buscarSubastaResponse", targetNamespace = "http://Servidor/", className = "servidor.BuscarSubastaResponse")
    @Action(input = "http://Servidor/Subasta/buscarSubastaRequest", output = "http://Servidor/Subasta/buscarSubastaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Subasta/buscarSubasta/Fault/RHException")
    })
    public List<SubastaVO> buscarSubasta(
        @WebParam(name = "k_reserva", targetNamespace = "")
        long kReserva)
        throws RHException_Exception
    ;

}
