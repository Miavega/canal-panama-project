
package servidor;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Reserva", targetNamespace = "http://Servidor/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Reserva {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     * @throws RHException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cargarEsclusa", targetNamespace = "http://Servidor/", className = "servidor.CargarEsclusa")
    @ResponseWrapper(localName = "cargarEsclusaResponse", targetNamespace = "http://Servidor/", className = "servidor.CargarEsclusaResponse")
    @Action(input = "http://Servidor/Reserva/cargarEsclusaRequest", output = "http://Servidor/Reserva/cargarEsclusaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Reserva/cargarEsclusa/Fault/RHException")
    })
    public List<Object> cargarEsclusa()
        throws RHException_Exception
    ;

    /**
     * 
     * @param fTransito
     * @return
     *     returns java.util.List<servidor.ReservaVO>
     * @throws RHException_Exception
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "leerReservasPorDia", targetNamespace = "http://Servidor/", className = "servidor.LeerReservasPorDia")
    @ResponseWrapper(localName = "leerReservasPorDiaResponse", targetNamespace = "http://Servidor/", className = "servidor.LeerReservasPorDiaResponse")
    @Action(input = "http://Servidor/Reserva/leerReservasPorDiaRequest", output = "http://Servidor/Reserva/leerReservasPorDiaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Reserva/leerReservasPorDia/Fault/RHException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://Servidor/Reserva/leerReservasPorDia/Fault/ParseException")
    })
    public List<ReservaVO> leerReservasPorDia(
        @WebParam(name = "f_transito", targetNamespace = "")
        String fTransito)
        throws ParseException_Exception, RHException_Exception
    ;

    /**
     * 
     * @param kBuque
     * @param fAsignacioncupos
     * @return
     *     returns servidor.CupoPasoVO
     * @throws RHException_Exception
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "revisarDisponibilidad", targetNamespace = "http://Servidor/", className = "servidor.RevisarDisponibilidad")
    @ResponseWrapper(localName = "revisarDisponibilidadResponse", targetNamespace = "http://Servidor/", className = "servidor.RevisarDisponibilidadResponse")
    @Action(input = "http://Servidor/Reserva/revisarDisponibilidadRequest", output = "http://Servidor/Reserva/revisarDisponibilidadResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Reserva/revisarDisponibilidad/Fault/RHException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://Servidor/Reserva/revisarDisponibilidad/Fault/ParseException")
    })
    public CupoPasoVO revisarDisponibilidad(
        @WebParam(name = "k_buque", targetNamespace = "")
        String kBuque,
        @WebParam(name = "f_asignacioncupos", targetNamespace = "")
        String fAsignacioncupos)
        throws ParseException_Exception, RHException_Exception
    ;

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<servidor.ReservaVO>
     * @throws RHException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "leerMisReservas", targetNamespace = "http://Servidor/", className = "servidor.LeerMisReservas")
    @ResponseWrapper(localName = "leerMisReservasResponse", targetNamespace = "http://Servidor/", className = "servidor.LeerMisReservasResponse")
    @Action(input = "http://Servidor/Reserva/leerMisReservasRequest", output = "http://Servidor/Reserva/leerMisReservasResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Reserva/leerMisReservas/Fault/RHException")
    })
    public List<ReservaVO> leerMisReservas(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario)
        throws RHException_Exception
    ;

    /**
     * 
     * @param fTransito
     * @param kTiporeserva
     * @param kIdresponsable
     * @param kBuque
     * @param iDirtransito
     * @param kEsclusa
     * @throws RHException_Exception
     * @throws ParseException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "insertarReserva", targetNamespace = "http://Servidor/", className = "servidor.InsertarReserva")
    @ResponseWrapper(localName = "insertarReservaResponse", targetNamespace = "http://Servidor/", className = "servidor.InsertarReservaResponse")
    @Action(input = "http://Servidor/Reserva/insertarReservaRequest", output = "http://Servidor/Reserva/insertarReservaResponse", fault = {
        @FaultAction(className = RHException_Exception.class, value = "http://Servidor/Reserva/insertarReserva/Fault/RHException"),
        @FaultAction(className = ParseException_Exception.class, value = "http://Servidor/Reserva/insertarReserva/Fault/ParseException")
    })
    public void insertarReserva(
        @WebParam(name = "k_buque", targetNamespace = "")
        String kBuque,
        @WebParam(name = "k_esclusa", targetNamespace = "")
        String kEsclusa,
        @WebParam(name = "k_idresponsable", targetNamespace = "")
        String kIdresponsable,
        @WebParam(name = "k_tiporeserva", targetNamespace = "")
        String kTiporeserva,
        @WebParam(name = "i_dirtransito", targetNamespace = "")
        String iDirtransito,
        @WebParam(name = "f_transito", targetNamespace = "")
        String fTransito)
        throws ParseException_Exception, RHException_Exception
    ;

}
